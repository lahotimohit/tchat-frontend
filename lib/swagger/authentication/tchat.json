{
    "openapi": "3.0.0",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticates a user and returns access and refresh tokens",
                "operationId": "login",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accessToken": {
                                            "type": "string"
                                        },
                                        "refreshToken": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "summary": "User login",
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/register": {
            "post": {
                "description": "Registers a new user during the onboarding process",
                "operationId": "register",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Sending the access token as Bearer <access_token_here>",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "refresh",
                        "in": "header",
                        "description": "Refresh token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered"
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing tokens"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "User registration",
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/profile/update": {
            "put": {
                "description": "Updates the authenticated user's profile information",
                "operationId": "updateProfile",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Sending the access token as Bearer <access_token_here>",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "refresh",
                        "in": "header",
                        "description": "Refresh token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProfileDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile successfully updated"
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update user profile",
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/session": {
            "get": {
                "description": "Retrieves current session information for the user",
                "operationId": "session",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Sending the access token as Bearer <access_token_here>",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session information retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get session info",
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/logout": {
            "get": {
                "description": "Logs out the user and invalidates their tokens",
                "operationId": "logout",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Sending the access token as Bearer <access_token_here>",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "refresh",
                        "in": "header",
                        "description": "Refresh token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged out"
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "User logout",
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/get-access-token": {
            "get": {
                "description": "Generates a new access token using the refresh token",
                "operationId": "getAccessToken",
                "parameters": [
                    {
                        "name": "refresh",
                        "in": "header",
                        "description": "Refresh token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New access token generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accessToken": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token"
                    }
                },
                "summary": "Get new access token",
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/verify-otp": {
            "post": {
                "description": "Verifies the one-time password sent to the user",
                "operationId": "verifyOtp",
                "parameters": [
                    {
                        "name": "otpToken",
                        "required": true,
                        "in": "query",
                        "description": "Token received for OTP verification",
                        "schema": {}
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyOtpDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully"
                    },
                    "401": {
                        "description": "Invalid or missing OTP token"
                    }
                },
                "summary": "Verify OTP",
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/resend-otp": {
            "post": {
                "description": "Resends the OTP back the the user",
                "operationId": "resendOtp",
                "parameters": [
                    {
                        "name": "otpToken",
                        "required": true,
                        "in": "query",
                        "description": "Token received for OTP verification",
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP verified successfully"
                    },
                    "401": {
                        "description": "Invalid or missing OTP token"
                    }
                },
                "summary": "Resend OTP",
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/profile": {
            "get": {
                "description": "Resends the OTP back the the user",
                "operationId": "profile",
                "parameters": [
                    {
                        "name": "Authorization",
                        "required": true,
                        "in": "header",
                        "description": "Sending the access token as Bearer <access_token_here>",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP verified successfully"
                    },
                    "401": {
                        "description": "Invalid or missing OTP token"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get Profile",
                "tags": [
                    "auth"
                ]
            }
        },
        "/tnum/mint": {
            "post": {
                "operationId": "mint",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Sending the access token as Bearer <access_token_here>",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The temporary number has been successfully created."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new temporary number",
                "tags": [
                    "Temporary Numbers"
                ]
            }
        },
        "/tnum/list": {
            "post": {
                "operationId": "list",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Sending the access token as Bearer <access_token_here>",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of temporary numbers."
                    },
                    "401": {
                        "description": "Unauthorized."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "List all temporary numbers for the authenticated user",
                "tags": [
                    "Temporary Numbers"
                ]
            }
        },
        "/tnum/activate": {
            "post": {
                "operationId": "activate",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Sending the access token as Bearer <access_token_here>",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivateDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The temporary number has been successfully activated."
                    },
                    "400": {
                        "description": "Bad request or temporary number not found."
                    },
                    "401": {
                        "description": "Unauthorized."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Activate a temporary number",
                "tags": [
                    "Temporary Numbers"
                ]
            }
        },
        "/tnum/deactivate": {
            "post": {
                "operationId": "deactivate",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Sending the access token as Bearer <access_token_here>",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeactivateDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The temporary number has been successfully deactivated."
                    },
                    "400": {
                        "description": "Bad request or temporary number not found."
                    },
                    "401": {
                        "description": "Unauthorized."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Deactivate a temporary number",
                "tags": [
                    "Temporary Numbers"
                ]
            }
        },
        "/contacts/filter": {
            "post": {
                "operationId": "filterContacts",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Sending the access token as Bearer <access_token_here>",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Contact filter criteria",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            },
                            "examples": {
                                "example1": {
                                    "value": {
                                        "contacts": [
                                            {
                                                "countryCode": 91,
                                                "mobileNumber": "1234567890"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns filtered contacts"
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Filter contacts based on criteria",
                "tags": [
                    "contacts"
                ]
            }
        },
        "/conversation/all": {
            "get": {
                "description": "Get All the conversations for the user",
                "operationId": "getAllConversations",
                "parameters": [
                    {
                        "name": "limit",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Sending the access token as Bearer <access_token_here>",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "",
                "tags": [
                    "conversation"
                ]
            }
        },
        "/conversation/create/individual": {
            "post": {
                "description": "Creates a new conversation between two users based upon their user id's",
                "operationId": "createIndividualConversation",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Sending the access token as Bearer <access_token_here>",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateIndividualConversationDto"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized - Invalid or missing token"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "",
                "tags": [
                    "conversation"
                ]
            }
        },
        "/conversation/create/group": {
            "post": {
                "operationId": "createGroupConversation",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Sending the access token as Bearer <access_token_here>",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized - Invalid or missing token"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "conversation"
                ]
            }
        }
    },
    "info": {
        "title": "TChat Application API",
        "description": "API Gateway for the tchat app",
        "version": "1.0",
        "contact": {}
    },
    "tags": [
        {
            "name": "auth",
            "description": "Authentication endpoints"
        }
    ],
    "servers": [],
    "components": {
        "securitySchemes": {
            "access-token": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "type": "http",
                "description": "Enter your access token",
                "in": "header"
            }
        },
        "schemas": {
            "LoginDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The email id for logging in",
                        "default": "testing@tchat.com"
                    },
                    "defaultMobileNumber": {
                        "type": "string",
                        "default": "9782XXXXXX",
                        "description": "The mobile number of the user without the country code"
                    },
                    "countryCode": {
                        "type": "integer",
                        "default": 91,
                        "description": "Country Code of the user mobile number"
                    }
                },
                "required": [
                    "email",
                    "defaultMobileNumber",
                    "countryCode"
                ]
            },
            "RegisterDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the user for registration",
                        "example": "John Doe"
                    },
                    "about": {
                        "type": "string",
                        "description": "About for the user account",
                        "example": "Hey there I am using TChat"
                    },
                    "profile_picture_url": {
                        "type": "string",
                        "description": "Url of the profile picture of the user",
                        "example": "https://unsplash.com"
                    }
                },
                "required": [
                    "name",
                    "about"
                ]
            },
            "UpdateProfileDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The new name for the user",
                        "default": "John Doe"
                    },
                    "about": {
                        "type": "string",
                        "description": "The new about for the user",
                        "default": "Hey there I am using TChat"
                    },
                    "profile_picture_url": {
                        "type": "string",
                        "description": "The new url for the profile picture",
                        "default": "https://unsplash.com"
                    }
                },
                "required": [
                    "name",
                    "about"
                ]
            },
            "VerifyOtpDto": {
                "type": "object",
                "properties": {
                    "otp": {
                        "type": "string",
                        "description": "Url of the profile picture of the user",
                        "example": "1234"
                    }
                },
                "required": [
                    "otp"
                ]
            },
            "ActivateDto": {
                "type": "object",
                "properties": {
                    "temporaryNumberId": {
                        "type": "string",
                        "description": "The temporary number id to activate",
                        "example": "cm7hloydg000ap5xxxxxx8ndhb"
                    }
                },
                "required": [
                    "temporaryNumberId"
                ]
            },
            "DeactivateDto": {
                "type": "object",
                "properties": {
                    "temporaryNumberId": {
                        "type": "string",
                        "description": "The temporary number id to activate",
                        "example": "cm7hloydg000ap5xxxxxx8ndhb"
                    }
                },
                "required": [
                    "temporaryNumberId"
                ]
            },
            "CreateIndividualConversationDto": {
                "type": "object",
                "properties": {
                    "userMobile": {
                        "type": "string",
                        "description": "Send the phone number of the user that we are forming conversation with"
                    }
                },
                "required": [
                    "userMobile"
                ]
            }
        }
    }
}